/* store.js */

import Vue from 'vue'
import Vuex from 'vuex'

Vue.use(Vuex)

//init state object
const state = {
    notes: [],
    activeNote: {

    }
}

//mutations that can be applied to our state
//any modification to the state MUST be made in a mutator
const mutations = {
    ADD_NOTE(state){
        const newNote = {
            text: 'New Note',
            favorite: false
        }
        // only mutators can mutate the state
        state.notes.push(newNote)
        state.activeNote = new Note
    },

    EDIT_NOTE(state, text){
        state.activeNote.text = text
    },

    DELETE_NOTE(state) {
        state.notes.$remove(state.activeNote)
        state.activeNote = state.notes[0]
    },

    ADD_FAVORITE(state) {
        state.activeNote.favorite = !state.activeNote.favorite
    },

    SET_ACTIVE_NOTE(state, note){
        state.activeNote = note
    }
}

//Actions are functions that can be called by our component to dispatch mutations.
const actions = {

}

//create the Vuex instance
// by combaning the state and mutations objects
//then export Vuex store for use by our components
export default new Vuex.Store({
    state,
    mutations
})
